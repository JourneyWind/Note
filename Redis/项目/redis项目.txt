用户登录/注册
手机获取验证码/code
1.校验手机号格式
2.生成验证码
3.存入redis
4.发送验证码
5.返回结果

登录/login
1.校验手机号格式
2.redis中取数据，校验验证码
3.数据不存在，返回结果
4.根据手机号查询数据库
5.若用户不存在，则创建用户并保存到数据库
6.将用户数据存入redis，设置expire---注意存入数据时的类型转换
7.返回token

拦截器
拦截器1
1.默认拦截所有请求，判断请求头中是否有token
2.基于token查询redis
3.若用户存在，保存用户到ThreadLocal
4.刷新token有效期
afterCompletion--移除用户

拦截器2
从ThreadLocal中获取对象，若不为空，放行

数据库和缓存不一致
更新缓存：每次更新数据库都更新缓存，无效写操作较多
删除缓存：更新数据库时让缓存失效，查询时再更新缓存

如何保证缓存与数据库的操作的同时成功或失败
单体系统，将缓存与数据库操作放在一个事务
分布式系统，利用TCC等分布式事务方案

缓存穿透
缓存穿透是指客户端请求的数据在缓存中和数据库中都不存在，这样缓存永远不会生效，这些请求都会打到数据库。
缓存空对象
布隆过滤

缓存雪崩
缓存雪崩是指在同一时段大量的缓存key同时失效或者Redis服务宕机，导致大量请求到达数据库，带来巨大压力。
给不同的Key的TTL添加随机值
利用Redis集群提高服务的可用性
给缓存业务添加降级限流策略
给业务添加多级缓存

缓存击穿
互斥锁、逻辑过期
互斥锁核心：setnx
